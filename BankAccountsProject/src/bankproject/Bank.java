/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bankproject;

import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author AULAFISI
 */
public class Bank extends javax.swing.JFrame {
    
    AccountsCollection accounts= new AccountsCollection();
    
    /**
     * Creates new form Bank
     */
    public Bank() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cuentasButtonGroup = new javax.swing.ButtonGroup();
        agregarButton = new javax.swing.JButton();
        mostrarButton = new javax.swing.JButton();
        numeroLabel = new javax.swing.JLabel();
        clienteLabel = new javax.swing.JLabel();
        saldoLabel = new javax.swing.JLabel();
        periodoLabel = new javax.swing.JLabel();
        sobregiroLabel = new javax.swing.JLabel();
        montoLabel = new javax.swing.JLabel();
        depositarButton = new javax.swing.JButton();
        retirarButton = new javax.swing.JButton();
        porcentajeLabel = new javax.swing.JLabel();
        interesesButton = new javax.swing.JButton();
        mantenimientoButton = new javax.swing.JButton();
        plazoRadioButton = new javax.swing.JRadioButton();
        corrienteRadioButton = new javax.swing.JRadioButton();
        numeroTextField = new javax.swing.JTextField();
        clienteTextField = new javax.swing.JTextField();
        saldoTextField = new javax.swing.JTextField();
        periodoTextField = new javax.swing.JTextField();
        sobregiroTextField = new javax.swing.JTextField();
        montoTextField = new javax.swing.JTextField();
        porcentajeTextField = new javax.swing.JTextField();
        sobregiroPorDefectoCheckBox = new javax.swing.JCheckBox();
        periodoPorDefectoCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        agregarButton.setText("Agregar");
        agregarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarButtonActionPerformed(evt);
            }
        });

        mostrarButton.setText("Mostrar");
        mostrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarButtonActionPerformed(evt);
            }
        });

        numeroLabel.setText("NÃºmero");

        clienteLabel.setText("Cliente");

        saldoLabel.setText("Saldo");

        periodoLabel.setText("Periodo");

        sobregiroLabel.setText("Sobregiro");

        montoLabel.setText("Monto");

        depositarButton.setText("Depositar");
        depositarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositarButtonActionPerformed(evt);
            }
        });

        retirarButton.setText("Retirar");
        retirarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retirarButtonActionPerformed(evt);
            }
        });

        porcentajeLabel.setText("Porcentaje");

        interesesButton.setText("Calcular intereses");
        interesesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interesesButtonActionPerformed(evt);
            }
        });

        mantenimientoButton.setText("Calcular mantenimiento");
        mantenimientoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mantenimientoButtonActionPerformed(evt);
            }
        });

        cuentasButtonGroup.add(plazoRadioButton);
        plazoRadioButton.setSelected(true);
        plazoRadioButton.setText("Cuenta a plazo");

        cuentasButtonGroup.add(corrienteRadioButton);
        corrienteRadioButton.setText("Cuenta corriente");

        sobregiroPorDefectoCheckBox.setText("Por defecto");

        periodoPorDefectoCheckBox.setText("Por defecto");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(plazoRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(corrienteRadioButton)
                .addGap(100, 100, 100))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(porcentajeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                                .addComponent(porcentajeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(sobregiroLabel)
                                    .addComponent(numeroLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(clienteLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(saldoLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(periodoLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(montoLabel, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(numeroTextField)
                                            .addComponent(clienteTextField)
                                            .addComponent(saldoTextField)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(periodoTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(sobregiroTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(sobregiroPorDefectoCheckBox)
                                                    .addComponent(periodoPorDefectoCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addComponent(montoTextField)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(depositarButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(interesesButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(agregarButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mantenimientoButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(retirarButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(mostrarButton, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(90, 90, 90))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarButton)
                    .addComponent(mostrarButton))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numeroLabel)
                    .addComponent(numeroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clienteLabel)
                    .addComponent(clienteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saldoLabel)
                    .addComponent(saldoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(periodoLabel)
                    .addComponent(periodoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(periodoPorDefectoCheckBox))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sobregiroLabel)
                    .addComponent(sobregiroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sobregiroPorDefectoCheckBox))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(plazoRadioButton)
                    .addComponent(corrienteRadioButton))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(montoLabel)
                    .addComponent(montoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(depositarButton)
                    .addComponent(retirarButton))
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(porcentajeLabel)
                    .addComponent(porcentajeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(interesesButton)
                    .addComponent(mantenimientoButton))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarButtonActionPerformed

        String number=numeroTextField.getText();
        String client=clienteTextField.getText();
        String balance=saldoTextField.getText();

        
        if(plazoRadioButton.isSelected()){
            if(periodoPorDefectoCheckBox.isSelected()){
                accounts.addAccount(new SavingsAccount(number,client,Double.parseDouble(balance)));
            }
            else{
                String period=periodoTextField.getText();
                accounts.addAccount(new SavingsAccount(number,client,Double.parseDouble(balance),Integer.parseInt(period)));
            }
            
        }
        else{
            if(sobregiroPorDefectoCheckBox.isSelected()){
                accounts.addAccount(new CurrentAccount(number,client,Double.parseDouble(balance)));
            }
            else{
                String overdraft=sobregiroTextField.getText();
                accounts.addAccount(new CurrentAccount(number,client,Double.parseDouble(balance),Double.parseDouble(overdraft)));
            }
        }
        
        JOptionPane.showMessageDialog(this, "Se registro cuenta.", "", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_agregarButtonActionPerformed

    private void mostrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarButtonActionPerformed
        ArrayList<Account> accountsList=accounts.getAccounts();
        StringBuilder report=new StringBuilder();
        
        for(int i=0;i<accountsList.size();i++){
            Account account=accountsList.get(i);
            
            if(!account.equals(null)){
                report.append("Numero: ").append(account.getNumber()).append("\n");
                report.append("Cliente: ").append(account.getClientName()).append("\n");
                report.append("Saldo: ").append(account.getBalance()).append("\n");
                report.append("Fecha apertura: ").append(account.getOppeningDate()).append("\n");
                
                if(account instanceof SavingsAccount){
                    report.append("Meses: ").append(((SavingsAccount) account).getMonthPeriods()).append("\n");
                    report.append("Fecha vencimiento: ").append(((SavingsAccount) account).getExpirationDate());
                }
                else{
                    report.append("Sobregiro: ").append(((CurrentAccount)account).getOverdraft());
                }  
                
                report.append("\n\n");
            }
        }
        
        JOptionPane.showMessageDialog(this, report);
        
        
    }//GEN-LAST:event_mostrarButtonActionPerformed

    private void depositarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositarButtonActionPerformed
        String number=numeroTextField.getText();
        String amount=montoTextField.getText();
        
        if(accounts.findAccount(number)!=null){
            Account account =accounts.findAccount(number);

            if(account.deposit(Double.parseDouble(amount))){
                accounts.updateAccount(account);
                JOptionPane.showMessageDialog(this, "Se realizo deposito.", "", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(this, "No se pudo realizar deposito.", "", JOptionPane.INFORMATION_MESSAGE);
            }
            
        }
        else{
            JOptionPane.showMessageDialog(this, "No se pudo realizar deposito, numero de cuenta no existe.", "", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_depositarButtonActionPerformed

    private void retirarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retirarButtonActionPerformed
        String number=numeroTextField.getText();
        String amount=montoTextField.getText();
        
        if(accounts.findAccount(number)!=null){
            Account account =accounts.findAccount(number);
            
            if(account.withdraw(Double.parseDouble(amount))){
                accounts.updateAccount(account);
                JOptionPane.showMessageDialog(this, "Se realizo retiro.", "", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(this, "No se pudo realizar retiro.", "", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "No se pudo realizar retiro, numero de cuenta no existe.", "", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_retirarButtonActionPerformed

    private void interesesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interesesButtonActionPerformed
        String number=numeroTextField.getText();
        String percentage=porcentajeTextField.getText();
        
        if(accounts.findAccount(number)!=null){
            Account account =accounts.findAccount(number);
            
            if(account.calculateInterest(Double.parseDouble(percentage))){
                accounts.updateAccount(account);
                JOptionPane.showMessageDialog(this, "Se calculo intereses.", "", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(this, "No se pudo calcular intereses.", "", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "No se pudo calcular intereses, numero de cuenta no existe.", "", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_interesesButtonActionPerformed

    private void mantenimientoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mantenimientoButtonActionPerformed
        String number=numeroTextField.getText();
        String percentage=porcentajeTextField.getText();
        
        if(accounts.findAccount(number)!=null){
            Account account =accounts.findAccount(number);
            
            if(account instanceof CurrentAccount){
                ((CurrentAccount) account).calculateMaintenance(Double.parseDouble(percentage));
                accounts.updateAccount(account);
                JOptionPane.showMessageDialog(this, "Se calculo mantenimiento.", "", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(this, "No se pudo calcular mantenimiento, cuenta no es de tipo corriente.", "", JOptionPane.INFORMATION_MESSAGE);
            }
            
        }
        else{
            JOptionPane.showMessageDialog(this, "No se pudo calcular mantenimiento, numero de cuenta no existe.", "", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_mantenimientoButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bank().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarButton;
    private javax.swing.JLabel clienteLabel;
    private javax.swing.JTextField clienteTextField;
    private javax.swing.JRadioButton corrienteRadioButton;
    private javax.swing.ButtonGroup cuentasButtonGroup;
    private javax.swing.JButton depositarButton;
    private javax.swing.JButton interesesButton;
    private javax.swing.JButton mantenimientoButton;
    private javax.swing.JLabel montoLabel;
    private javax.swing.JTextField montoTextField;
    private javax.swing.JButton mostrarButton;
    private javax.swing.JLabel numeroLabel;
    private javax.swing.JTextField numeroTextField;
    private javax.swing.JLabel periodoLabel;
    private javax.swing.JCheckBox periodoPorDefectoCheckBox;
    private javax.swing.JTextField periodoTextField;
    private javax.swing.JRadioButton plazoRadioButton;
    private javax.swing.JLabel porcentajeLabel;
    private javax.swing.JTextField porcentajeTextField;
    private javax.swing.JButton retirarButton;
    private javax.swing.JLabel saldoLabel;
    private javax.swing.JTextField saldoTextField;
    private javax.swing.JLabel sobregiroLabel;
    private javax.swing.JCheckBox sobregiroPorDefectoCheckBox;
    private javax.swing.JTextField sobregiroTextField;
    // End of variables declaration//GEN-END:variables
}
